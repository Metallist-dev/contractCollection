plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.openapi.generator' version '5.4.0'
    //id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "jacoco"
}

apply plugin: 'org.openapi.generator'
//apply plugin: 'org.asciidoctor.jvm.convert'

// VARIABLES
def SpringVersion = '2.6.3'
def TestNGVersion = '7.5'
def JacksonVersion = '2.13.1'
def OpenAPIVersion = '1.6.6'
def jacocoVersion = '0.8.7'
// VARIABLES

group = 'de.metallist'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    //maven {
    //    url "https://plugins.gradle.org/m2/"
    //}
}

openApiGenerate {
    generatorName = "html2"
    inputSpec = "$rootDir/src/main/resources/static/contractcollection-api.yaml" as Object
    outputDir = "$buildDir/docs/openapi" as Object
}

openApiValidate {
    inputSpec = "$rootDir/src/main/resources/static/contractcollection-api.yaml" as Object
}

/*asciidoctor {
    delete("$buildDir/docs")
    dependsOn 'openApiGenerate'
    sourceDir file("$buildDir/docs/openapi")
    //sources {
    //    include 'index.adoc'
    //}
    outputDir file("$buildDir/docs/asciidoc")
}*/

dependencies {
    /////////////////
    // SPRING BOOT //
    /////////////////

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    //testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: SpringVersion
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.6.3')
    {
        exclude group: 'junit', module: 'junit'
    }


    ////////////
    // OTHERS //
    ////////////

    // MIT License
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    // Apache License 2.0
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: JacksonVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: JacksonVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: OpenAPIVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-common
    //implementation group: 'org.springdoc', name: 'springdoc-openapi-common', version: OpenAPIVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.openapitools/openapi-generator-gradle-plugin
    implementation group: 'org.openapitools', name: 'openapi-generator-gradle-plugin', version: '5.4.0'

    // unknown license
    // https://mvnrepository.com/artifact/org.asciidoctor/asciidoctor-gradle-jvm
    //implementation group: 'org.asciidoctor', name: 'asciidoctor-gradle-jvm', version: '3.3.2'


    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webmvc-core
    //testImplementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: OpenAPIVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation group: 'org.testng', name: 'testng', version: TestNGVersion

    // MIT License
    // https://mvnrepository.com/artifact/org.mockito/mockito-testng
    testImplementation group: 'org.mockito', name: 'mockito-testng', version: '0.4.16'

    // EPL 2.0
    // https://mvnrepository.com/artifact/org.jacoco/org.jacoco.agent
    testImplementation group: 'org.jacoco', name: 'org.jacoco.agent', version: jacocoVersion

}

test {
    testLogging {
        showStandardStreams = true
    }

    useTestNG() {
        failFast = false
        useDefaultListeners = true
        preserveOrder = true
        groupByInstances = true
        suites 'src/test/java/de/metallist/backend/testsuite.xml'
        beforeTest {descriptor -> logger.lifecycle("Running Test: " + descriptor)}
    }

    reports.html.enabled(false)

    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = jacocoVersion
    reportsDirectory = layout.buildDirectory.dir('docs/jacoco') as Directory
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('docs/jacoco/jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.3
            }
        }
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

// VARIABLES
def SpringVersion = '2.6.3'
def TestNGVersion = '7.5'
def JacksonVersion = '2.13.1'
def OpenAPIVersion = '1.6.6'
// VARIABLES

group = 'de.metallist'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    /////////////////
    // SPRING BOOT //
    /////////////////

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: SpringVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: SpringVersion


    ////////////
    // OTHERS //
    ////////////

    // MIT License
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    // LGPL 2.1
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.3'

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    //implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.4.3'

    // Apache License 2.0
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: JacksonVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: JacksonVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: OpenAPIVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-common
    //implementation group: 'org.springdoc', name: 'springdoc-openapi-common', version: OpenAPIVersion


    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webmvc-core
    //testImplementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: OpenAPIVersion

    // Apache License 2.0
    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation group: 'org.testng', name: 'testng', version: TestNGVersion

    // MIT License
    // https://mvnrepository.com/artifact/org.mockito/mockito-testng
    testImplementation group: 'org.mockito', name: 'mockito-testng', version: '0.4.16'

}

test {
    useTestNG() {
        useDefaultListeners = true
        suites 'src/test/java/de/metallist/backend/testsuite.xml'
    }

    reports.html.enabled(false)
}

/*flyway {
    url = 'jdbc:mariadb://localhost:3306/db_vertraege'
    user = 'vertragssammlungsuser'
    password = 'ProgramPassword'
    schemas = ['vertraege']
    locations = ['classpath:db/migration/','filesystem:db/migration']
}

flywayMigrate.dependsOn classes*/